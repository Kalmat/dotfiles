From a9cac915779553f67db88df116aed7bc07a72084 Mon Sep 17 00:00:00 2001
From: nagaohiroki <zerosiseinokae@yahoo.co.jp>
Date: Fri, 30 Oct 2015 22:02:06 +0900
Subject: [PATCH] FixJapanese

---
 autoload/OmniSharp.vim | 13 +++++++++++++
 python/OmniSharp.py    |  6 ++----
 python/asyncrequest.py |  4 ++--
 python/syncrequest.py  |  4 ++--
 4 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/autoload/OmniSharp.vim b/autoload/OmniSharp.vim
index 406b197..4796b5e 100644
--- a/autoload/OmniSharp.vim
+++ b/autoload/OmniSharp.vim
@@ -569,6 +569,19 @@ function! OmniSharp#AppendCtrlPExtensions() abort
     let g:ctrlp_extensions += ['findtype', 'findsymbols', 'findcodeactions']
   endif
 endfunction
+ 
+function! OmniSharp#GetLineUTF8() abort
+	let l:lines = getline(1,'$')
+	let l:utf8lines = []
+	for l:line in l:lines
+		call add(l:utf8lines, iconv(l:line, &encoding, 'utf-8'))
+	endfor
+	return l:utf8lines
+endfunction
+
+function! OmniSharp#GetCurrentBufferNameUTF8() abort
+	return iconv(expand('%:p'), &encoding, 'utf-8')
+endfunction
 
 function! s:find_solution_files() abort
   "get the path for the current buffer
diff --git a/python/OmniSharp.py b/python/OmniSharp.py
index ee7b63d..c13cab9 100644
--- a/python/OmniSharp.py
+++ b/python/OmniSharp.py
@@ -18,8 +18,8 @@ def getResponse(endPoint, additional_parameters=None, timeout=None):
     parameters = {}
     parameters['line'] = vim.eval('line(".")')
     parameters['column'] = vim.eval('col(".")')
-    parameters['buffer'] = '\r\n'.join(vim.eval("getline(1,'$')")[:])
-    parameters['filename'] = vim.current.buffer.name
+    parameters['buffer'] = '\r\n'.join(vim.eval('OmniSharp#GetLineUTF8()')[:])
+    parameters['filename'] = vim.eval('OmniSharp#GetCurrentBufferNameUTF8()')
     if additional_parameters != None:
         parameters.update(additional_parameters)
 
@@ -109,7 +109,6 @@ def setBufferText(text):
     lines = text.splitlines()
 
     cursor = vim.current.window.cursor
-    lines = [line.encode('utf-8') for line in lines]
     vim.current.buffer[:] = lines
     vim.current.window.cursor = cursor
 
@@ -163,7 +162,6 @@ def renameTo():
 
 def setBuffer(buffer):
     lines = buffer.splitlines()
-    lines = [line.encode('utf-8') for line in lines]
     vim.current.buffer[:] = lines
 
 def build():
diff --git a/python/asyncrequest.py b/python/asyncrequest.py
index 8ab1048..2faa250 100644
--- a/python/asyncrequest.py
+++ b/python/asyncrequest.py
@@ -26,8 +26,8 @@ def get_response_async(endPoint, callback, params=None, timeout=None):
     parameters = {}
     parameters['line'] = vim.eval('line(".")')
     parameters['column'] = vim.eval('col(".")')
-    parameters['buffer'] = '\r\n'.join(vim.eval("getline(1,'$')")[:])
-    parameters['filename'] = vim.current.buffer.name
+    parameters['buffer'] = '\r\n'.join(vim.eval('OmniSharp#GetLineUTF8()')[:])
+    parameters['filename'] = vim.eval('OmniSharp#GetCurrentBufferNameUTF8()')
 
     if params is not None:
         parameters.update(params)
diff --git a/python/syncrequest.py b/python/syncrequest.py
index 5630ef3..b3e6d78 100644
--- a/python/syncrequest.py
+++ b/python/syncrequest.py
@@ -4,8 +4,8 @@ def get_response(endPoint, params=None, timeout=None):
     parameters = {}
     parameters['line'] = vim.eval('line(".")')
     parameters['column'] = vim.eval('col(".")')
-    parameters['buffer'] = '\r\n'.join(vim.eval("getline(1,'$')")[:])
-    parameters['filename'] = vim.current.buffer.name
+    parameters['buffer'] = '\r\n'.join(vim.eval('OmniSharp#GetLineUTF8()')[:])
+    parameters['filename'] = vim.eval('OmniSharp#GetCurrentBufferNameUTF8()')
 
     if params is not None:
         parameters.update(params)
-- 
1.9.5.msysgit.1

