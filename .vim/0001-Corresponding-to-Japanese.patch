From 3809b8ff0af0ea3d3d719bc8d9326f6b2fde17c6 Mon Sep 17 00:00:00 2001
From: nagaohiroki <zerosiseinokae@yahoo.co.jp>
Date: Wed, 30 Dec 2015 23:45:58 +0900
Subject: [PATCH 28/28] FixJapanese

---
 python/Completion.py   |  6 +++---
 python/OmniSharp.py    | 14 ++++++++++----
 python/asyncrequest.py |  7 ++-----
 python/syncrequest.py  |  7 ++-----
 4 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/python/Completion.py b/python/Completion.py
index 45d863f..74352c2 100644
--- a/python/Completion.py
+++ b/python/Completion.py
@@ -8,12 +8,12 @@ class Completion:
         parameters['WantDocumentationForEveryCompletionResult'] = \
             bool(int(vim.eval('g:omnicomplete_fetch_full_documentation')))
 
-        parameters['buffer'] = '\r\n'.join(vim.eval('s:textBuffer')[:])
-
+        textBuffer = '\r\n'.join(vim.eval('s:textBuffer')[:])
+        enc = vim.eval('&encoding')
+        parameters['buffer'] = textBuffer.decode(enc).encode("utf-8")
         response = syncrequest.get_response('/autocomplete', parameters)
 
 
-        enc = vim.eval('&encoding')
         vim_completions = []
         if response is not None:
             for completion in response:
diff --git a/python/OmniSharp.py b/python/OmniSharp.py
index 3fe8ab9..a5be181 100644
--- a/python/OmniSharp.py
+++ b/python/OmniSharp.py
@@ -13,13 +13,19 @@ logger.addHandler(hdlr)
 formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
 hdlr.setFormatter(formatter)
 
-
-def getResponse(endPoint, additional_parameters=None, timeout=None):
+def getVimParameters():
+    enc = vim.eval('&encoding')
+    buf = '\r\n'.join(vim.eval("getline(1,'$')")[:])
+    name = vim.current.buffer.name
     parameters = {}
     parameters['line'] = vim.eval('line(".")')
     parameters['column'] = vim.eval('col(".")')
-    parameters['buffer'] = '\r\n'.join(vim.eval("getline(1,'$')")[:])
-    parameters['filename'] = vim.current.buffer.name
+    parameters['buffer'] = buf.decode(enc).encode("utf-8")
+    parameters['filename'] = name.decode(enc).encode("utf-8")
+    return parameters
+
+def getResponse(endPoint, additional_parameters=None, timeout=None):
+    parameters = getVimParameters()
     if additional_parameters != None:
         parameters.update(additional_parameters)
 
diff --git a/python/asyncrequest.py b/python/asyncrequest.py
index 8ab1048..346a5b9 100644
--- a/python/asyncrequest.py
+++ b/python/asyncrequest.py
@@ -1,4 +1,5 @@
 import vim, urllib2, urllib, urlparse, logging, json, os, os.path, cgi, types, threading
+import OmniSharp
 
 class ThreadUrl(threading.Thread):
 
@@ -23,11 +24,7 @@ def urlopen_async(url, callback, data, timeout):
     thread.start()
 
 def get_response_async(endPoint, callback, params=None, timeout=None):
-    parameters = {}
-    parameters['line'] = vim.eval('line(".")')
-    parameters['column'] = vim.eval('col(".")')
-    parameters['buffer'] = '\r\n'.join(vim.eval("getline(1,'$')")[:])
-    parameters['filename'] = vim.current.buffer.name
+    parameters = OmniSharp.getVimParameters()
 
     if params is not None:
         parameters.update(params)
diff --git a/python/syncrequest.py b/python/syncrequest.py
index 0c63789..449566f 100644
--- a/python/syncrequest.py
+++ b/python/syncrequest.py
@@ -1,11 +1,8 @@
 import vim, urllib2, urllib, urlparse, json
+import OmniSharp
 
 def get_response(endPoint, params=None, timeout=None):
-    parameters = {}
-    parameters['line'] = vim.eval('line(".")')
-    parameters['column'] = vim.eval('col(".")')
-    parameters['buffer'] = '\r\n'.join(vim.eval("getline(1,'$')")[:])
-    parameters['filename'] = vim.current.buffer.name
+    parameters = OmniSharp.getVimParameters()
 
     if params is not None:
         parameters.update(params)
-- 
1.9.5.msysgit.1

